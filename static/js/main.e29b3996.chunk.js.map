{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","type","onChange","axios","require","default","App","e","setState","searchField","target","value","state","get","then","response","data","catch","error","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAIaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,mCAAOL,EAAMG,QAAQG,KAArB,OACA,kCAAMN,EAAMG,QAAQI,MAApB,WCFKC,EAAW,SAACR,GAErB,OADAS,QAAQC,IAAIV,GAER,qBAAKC,UAAU,YAAf,SACKD,EAAMW,SAASC,KAAI,SAAAT,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCPtBS,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACId,UAAU,SACVe,KAAK,SACLF,YAAcA,EACdG,SAAUF,MCLZG,EAAQC,EAAQ,IAASC,QA8ChBC,E,kDA3Cb,aAAc,IAAD,8BACX,gBAmBFN,aAAe,SAACO,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAlBrC,EAAKC,MAAQ,CACXhB,SAAU,GACVa,YAAa,IALJ,E,qDASb,WAAqB,IAAD,OAClBN,EAAMU,IAAI,8CACTC,MAAK,SAACC,GACLrB,QAAQC,IAAIoB,GACZ,EAAKP,SAAS,CAAEZ,SAAUmB,EAASC,UAEpCC,OAAM,SAACC,GACNxB,QAAQC,IAAIuB,Q,oBAShB,WAAU,IAAD,EAC2BC,KAAKP,MAA/BhB,EADD,EACCA,SAAUa,EADX,EACWA,YACZW,EAAmBxB,EAASyB,QAAO,SAAAjC,GAAO,OAC9CA,EAAQG,KAAK+B,cAAcC,SAASd,EAAYa,kBAElD,OACE,sBAAKpC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEa,YAAc,kBACdC,aAAgBmB,KAAKnB,eAEvB,cAAC,EAAD,CAAUJ,SAAUwB,W,GAtCVI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e29b3996.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className=\"card-container\">\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set1&size=180x180`} alt=\"monster\"/>\r\n        <h2> { props.monster.name } </h2>\r\n        <p> { props.monster.email } </p>\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport './card-list.styles.css'\r\n\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList = (props) => {\r\n    console.log(props);\r\n    return(\r\n        <div className=\"card-list\">\r\n            {props.monsters.map(monster => (\r\n                <Card key={monster.id} monster={monster}/>\r\n            ))}\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input \r\n        className='search'\r\n        type='search' \r\n        placeholder= {placeholder} \r\n        onChange={handleChange}\r\n    />\r\n)","import { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component.jsx';\nimport { SearchBox } from './components/search-box/search-box.component.jsx';\nconst axios = require('axios').default;\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: '' \n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/users')\n    .then((response) => {\n      console.log(response);\n      this.setState({ monsters: response.data });\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value})\n  }\n\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())  \n    )\n    return (\n      <div className=\"App\">\n        <h1>Monsters Roladex</h1>\n        <SearchBox \n          placeholder = 'search monsters'\n          handleChange = {this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />       \n      </div>\n    );\n  }  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}